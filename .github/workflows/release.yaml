name: 'Release'

on:
  release:
    types: [ "published" ]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: release
  cancel-in-progress: true

jobs:
    version:
        name: 'version'
        runs-on: ubuntu-latest
        steps:
          - name: checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: 'Get version'
            id: version
            uses: JasperHG90/git-version@v1.0.0
          - name: 'Print version'
            id: transform_version
            run: |
              echo "Version is ${{ env.version }}"
              VERSION=${{ env.version }}
              VERSION="${VERSION//+/\.}"
              echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        outputs:
          VERSION: ${{ steps.transform_version.outputs.VERSION }}
    build:
        runs-on: ubuntu-latest
        needs: version
        permissions:
            packages: write
        strategy:
            matrix:
              dialect: ["postgres", "bigquery", "databricks"]
              platform: ["linux/amd64", "linux/arm64"]
            fail-fast: false
        env:
            VERSION: ${{ needs.version.outputs.VERSION }}
        steps:
          - name: checkout
            uses: actions/checkout@v4
          - name: Log in to the Container registry
            uses: docker/login-action@v3
            with:
                registry: https://ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
          - name: buildx
            uses: docker/setup-buildx-action@v3
          - name: set tag
            run: |
                echo "REPO=ghcr.io/jasperhg90/manuel-${{ matrix.dialect }}-$(echo ${{ matrix.platform }} | tr / -)" >> $GITHUB_ENV
          - name: 'Set manuel package version'
            run: |
              sed -i -e "s/0.0.0/${{ env.VERSION }}/g" src/manuel/__init__.py
          - name: Push image
            uses: docker/build-push-action@v6
            env:
                REPO: ${{ env.REPO }}
            with:
              context: .
              file: ./Dockerfile
              build-args: |
                DIALECT=${{ matrix.dialect }}
              push: true
              platforms: ${{ matrix.platform }}
              tags: ${{ env.REPO }}:latest,${{ env.REPO }}:${{ env.VERSION }}
